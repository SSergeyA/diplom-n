---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
    section: tools
spec:
  ports:
    - name: http-port
      port: 8080
      protocol: TCP
      targetPort: 8080   
  selector:
    app: jenkins
    section: tools
  clusterIP: None

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-0
  namespace: jenkins
  labels:
    app: jenkins
    section: tools
spec:
  ports:
    - name: http-port
      port: 8080
      protocol: TCP
      targetPort: 8080
      nodePort: 32000
    - name: jnlp-port
      port: 50000
      protocol: TCP
      targetPort: 50000
  selector:
    app: jenkins
    section: tools
    statefulset.kubernetes.io/pod-name: jenkins-0
  type: NodePort 

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
    section: tools
spec:
  replicas: 1
  serviceName: jenkins
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
        section: tools
    spec:
      securityContext:
            fsGroup: 1000 
            runAsUser: 1000
      serviceAccountName: jenkins-account
      imagePullSecrets:
        - name: sergey-local
      containers:
      - name: jenkins
        image: jenkins/jenkins:lts
        imagePullPolicy: IfNotPresent
        livenessProbe:
            httpGet:
              path: "/login"
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
        readinessProbe:
            httpGet:
              path: "/login"
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
        ports:
          - name: http-port
            containerPort: 8080
          - name: jnlp-port
            containerPort: 50000
        resources:
          requests:
            memory: "500Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2"
        volumeMounts:
          - name: jenkins-home
            mountPath: /var/jenkins_home
#      volumes:
#        - name: jenkins-home
#          emptyDir: {} 
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
              claimName: jenkins-pv-claim
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-pv-volume
  labels:
    type: local
spec:
  storageClassName: local-storage
  claimRef:
    name: jenkins-pv-claim
    namespace: jenkins
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  local:
    path: /mnt
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pv-claim
  namespace: jenkins
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

